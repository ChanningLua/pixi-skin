import * as PIXI from 'pixi.js';
export declare class Input extends PIXI.Container {
    private _input_style;
    private _box_generator;
    private _multiline;
    private _box_cache;
    private _previous;
    private _dom_added;
    private _dom_visible;
    private _placeholder;
    private _placeholderColor;
    private _selection;
    private _restrict_value;
    private _dom_input;
    private _last_renderer;
    private _resolution;
    private _canvas_bounds;
    private _box;
    private _surrogate;
    private _font_metrics;
    constructor(styles: any);
    private _substituted;
    get substituteText(): any;
    set substituteText(substitute: any);
    get placeholder(): string;
    set placeholder(text: string);
    private _disabled;
    get disabled(): boolean;
    set disabled(disabled: boolean);
    private _max_length;
    get maxLength(): number;
    set maxLength(length: number);
    private _restrict_regex;
    get restrict(): any;
    set restrict(regex: any);
    get text(): any;
    set text(text: any);
    get htmlInput(): any;
    private dom_visible;
    focus(): void;
    blur(): void;
    select(): void;
    setInputStyle(key: any, value: any): void;
    destroy(options: any): void;
    _createDOMInput(): void;
    _addListeners(): void;
    _onInputKeyDown(e: any): void;
    _onInputInput(e: any): void;
    _onInputKeyUp(e: any): void;
    _onFocused(): void;
    _onBlurred(): void;
    _onAdded(): void;
    _onRemoved(): void;
    private state;
    _setState(state: any): void;
    renderWebGL(renderer: any): void;
    renderCanvas(renderer: any): void;
    render(renderer: any): void;
    _renderInternal(renderer: any): void;
    _update(): void;
    _updateBox(): void;
    _updateSubstitution(): void;
    _updateDOMInput(): void;
    _applyRestriction(): void;
    _needsUpdate(): boolean;
    _needsNewBoxCache(): boolean;
    private _surrogate_hitbox;
    private _surrogate_mask;
    _createSurrogate(): void;
    _updateSurrogate(): void;
    _updateSurrogateHitbox(bounds: any): void;
    _updateSurrogateMask(bounds: any, padding: any): void;
    get textDisplay(): any;
    _destroySurrogate(): void;
    _onSurrogateFocus(): void;
    _ensureFocus(): void;
    _deriveSurrogateStyle(): any;
    _deriveSurrogatePadding(): any;
    _deriveSurrogateText(): any;
    _updateFontMetrics(): void;
    _buildBoxCache(): void;
    _destroyBoxCache(): void;
    _hasFocus(): boolean;
    _setDOMInputVisible(visible: any): void;
    _getCanvasBounds(): {
        top: any;
        left: any;
        width: any;
        height: any;
    };
    _getDOMInputBounds(): any;
    _getDOMRelativeWorldTransform(): any;
    _pixiMatrixToCSS(m: any): string;
    _comparePixiMatrices(m1: any, m2: any): boolean;
    _compareClientRects(r1: any, r2: any): boolean;
}
//# sourceMappingURL=Input.d.ts.map