import * as PIXI from 'pixi.js';
import { UIComponent } from './types/UIComponent';
export declare class CompatibilityContainer extends PIXI.Container implements UIComponent {
    constructor();
    protected _left: string;
    protected _right: string;
    protected _top: string;
    protected _bottom: string;
    protected _horizontalCenter: string;
    protected _verticalCenter: string;
    protected _percentWidth: number;
    protected _percentHeight: number;
    protected _explicitWidth: number;
    protected _explicitHeight: number;
    protected _includeInLayout: boolean;
    protected _states: string[];
    protected _currentState: string;
    protected _config: any;
    protected _stateConfigDict: any;
    id: string;
    userData: any;
    hostComponentKey: string;
    set skewX(value: number);
    get skewX(): number;
    set skewY(value: number);
    get skewY(): number;
    set scaleX(value: number);
    get scaleX(): number;
    set scaleY(value: number);
    get scaleY(): number;
    set anchorOffsetX(value: number);
    get anchorOffsetX(): number;
    set anchorOffsetY(value: number);
    get anchorOffsetY(): number;
    set includeInLayout(value: boolean);
    get includeInLayout(): boolean;
    set left(value: string);
    get left(): string;
    set right(value: string);
    get right(): string;
    set top(value: string);
    get top(): string;
    set bottom(value: string);
    get bottom(): string;
    set horizontalCenter(value: string);
    get horizontalCenter(): string;
    set verticalCenter(value: string);
    get verticalCenter(): string;
    set percentWidth(value: number);
    get percentWidth(): number;
    set percentHeight(value: number);
    get percentHeight(): number;
    set explicitWidth(value: number);
    get explicitWidth(): number;
    set explicitHeight(value: number);
    changeBasicLayout(_width: any, _height: any): void;
    get explicitHeight(): number;
    set states(value: string[]);
    get states(): string[];
    set currentState(value: string);
    get currentState(): string;
    set childrenState(value: string);
    set config(value: any);
    get config(): any;
    protected addListeners(): void;
    protected removeListeners(): void;
    protected onAdded(parent: PIXI.Container): void;
    protected onRemoved(parent: PIXI.Container): void;
    protected onPointerCancel(evt: PIXI.InteractionEvent): void;
    protected onPointerDown(evt: PIXI.InteractionEvent): void;
    protected onPointerMove(evt: PIXI.InteractionEvent): void;
    protected onPointerOut(evt: PIXI.InteractionEvent): void;
    protected onPointerOver(evt: PIXI.InteractionEvent): void;
    protected onPointerTap(evt: PIXI.InteractionEvent): void;
    protected onPointerUp(evt: PIXI.InteractionEvent): void;
    protected onPointerOutside(evt: PIXI.InteractionEvent): void;
    protected _referenceDict: {
        [key: string]: string;
    };
    getReference(id: string): any;
    destroy(options?: boolean): void;
    protected _destroyed: boolean;
    get destroyed(): boolean;
}
//# sourceMappingURL=CompatibilityContainer.d.ts.map